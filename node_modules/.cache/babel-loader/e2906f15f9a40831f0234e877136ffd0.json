{"ast":null,"code":"import _slicedToArray from \"/Users/kevin/Desktop/Github_Projects/flavortown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kevin/Desktop/Github_Projects/flavortown/src/components/GuyNews/GuyNews.js\";\nimport React, { useState, useEffect } from 'react';\nimport Guy from '../guy.png';\nexport default function GuyNews() {\n  //STATE \n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        displayData = _useState2[0],\n        setDisplayData = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        carouselPosition = _useState4[0],\n        setCarouselPosition = _useState4[1]; //GET API \n\n\n  useEffect(() => {\n    fetch(process.env.REACT_APP_API_ADDRESS + '/carousel').then(res => res.json()).then(data => {\n      const random = () => Math.floor(Math.random() * 19);\n\n      const result = [];\n\n      for (let i = 0; i < 5; i++) {\n        result.push(data[random()]);\n      }\n\n      console.log(result);\n      setDisplayData(result);\n    });\n  }, []); //Rendering for Carousel\n  //RENDERING\n  //\n  //if loaded \n\n  if (displayData[0]) {\n    function Card({\n      title,\n      urlToImage,\n      description,\n      url,\n      author,\n      source\n    }) {\n      if (author === source.name) {\n        author = null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"guyNews__card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"guyNews__cardTitle\",\n        href: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, title), React.createElement(\"summary\", {\n        className: \"guyNews__cardDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, description), React.createElement(\"p\", {\n        className: \"guyNews__cardAuthor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, author ? \"\".concat(author, \",\") : '', \" \", source.name));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"guyNews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"guyNews__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"BREAKING Guy Fieri News\"), React.createElement(\"article\", {\n      className: \"guyNews__article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, displayData.map((card, index) => {\n      const title = card.title,\n            urlToImage = card.urlToImage,\n            url = card.url,\n            source = card.source;\n      let author = card.author;\n      return React.createElement(Card, {\n        key: 'Card' + index,\n        title: title,\n        urlToImage: urlToImage ? urlToImage : Guy,\n        url: url,\n        author: author,\n        source: source,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    }))));\n  } //defaut return if nothing is loaded \n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"  Loading ... \");\n}","map":{"version":3,"sources":["/Users/kevin/Desktop/Github_Projects/flavortown/src/components/GuyNews/GuyNews.js"],"names":["React","useState","useEffect","Guy","GuyNews","displayData","setDisplayData","carouselPosition","setCarouselPosition","fetch","process","env","REACT_APP_API_ADDRESS","then","res","json","data","random","Math","floor","result","i","push","console","log","Card","title","urlToImage","description","url","author","source","name","map","card","index"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Guy from '../guy.png'\nexport default function GuyNews(){\n    //STATE \n    const [displayData,setDisplayData]=useState([]);\n    const [carouselPosition,setCarouselPosition]=useState(0);\n\n    //GET API \n    useEffect(()=>{\n        fetch(process.env.REACT_APP_API_ADDRESS+'/carousel')\n        .then(res=>res.json())\n        .then(data=>{\n            const random=()=>Math.floor(Math.random()*19)\n            const result=[];\n            for(let i=0;i<5;i++){\n                result.push(data[random()])\n            }\n            console.log(result)\n            setDisplayData(result)})\n    },[])\n\n    //Rendering for Carousel\n   \n    \n\n    //RENDERING\n    //\n\n    //if loaded \n    if(displayData[0]){\n\n       \n        function Card({title,urlToImage,description,url,author,source}){\n            if(author===source.name){\n                author=null;\n            }\n            return(\n                <div className=\"guyNews__card\">\n                <a className=\"guyNews__cardTitle\" href={url}>{title}</a>\n                       \n                        <summary className=\"guyNews__cardDescription\">{description}</summary>\n                \n                            <p className=\"guyNews__cardAuthor\">{author?`${author},`:''} {source.name} \n                        </p>\n    \n            </div>\n            )\n        }\n\n\n      \n     \n        return(\n            <>\n            \n            <div className=\"guyNews\">\n            <h2 className=\"guyNews__title\">BREAKING Guy Fieri News</h2>\n            <article className=\"guyNews__article\">\n               {displayData.map((card,index)=>{\n                const {title,urlToImage,url,source}=card;\n                let author=card.author;\n               \n                return(\n                    <Card\n                        key={'Card'+index}\n                        title={title}\n                        urlToImage={urlToImage?urlToImage:Guy}\n                        url={url}\n                        author={author}\n                        source={source}\n                    />\n                )\n            })}\n            </article>\n            </div>\n           \n            </>\n        )\n    }\n    //defaut return if nothing is loaded \n\n    return(\n        <div>  Loading ... </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}