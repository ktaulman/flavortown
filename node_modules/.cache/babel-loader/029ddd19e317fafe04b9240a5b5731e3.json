{"ast":null,"code":"import _slicedToArray from \"/Users/kevin/Desktop/Github_Projects/flavortown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kevin/Desktop/Github_Projects/flavortown/src/components/Random/Random.js\";\nimport React, { useState, useEffect } from 'react';\nimport Guy from '../guy.png';\nexport default function Random() {\n  //STATE\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        displayData = _useState2[0],\n        setDisplayData = _useState2[1]; //EFFECTS \n\n\n  useEffect(() => {\n    fetch('https://flavortown-api.herokuapp.com/random').then(res => res.json()).then(data => setDisplayData(data));\n  }, []); //RENDERING\n  //WHEN NOT LOADED \n  //LOADED \n\n  if (displayData) {\n    console.log(displayData);\n    const extendedIngredients = displayData.extendedIngredients,\n          image = displayData.image,\n          instructions = displayData.instructions,\n          title = displayData.title,\n          sourceUrl = displayData.sourceUrl; //RESPONSE RENDERING\n\n    const renderInstructions = instructions.replace('instructions', '').split('.').slice(0, -1).map(el => React.createElement(\"li\", {\n      className: \"instructions__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, el));\n    const renderIngredients = extendedIngredients.map(ingredient => React.createElement(\"li\", {\n      className: \"ingredients__item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, ingredient.originalString));\n    return React.createElement(\"div\", {\n      className: \"random\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"random__recipe\",\n      href: sourceUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, title), React.createElement(\"img\", {\n      src: image ? image : Guy,\n      alt: \"\",\n      className: \"random__image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"ingredients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"ingredients__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Ingredients\"), React.createElement(\"ul\", {\n      className: \"ingredients__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, renderIngredients)), React.createElement(\"section\", {\n      className: \"instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"instructions__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Instructions\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, renderInstructions)));\n  }\n\n  return React.createElement(\"h1\", {\n    style: {\n      fontSize: '36px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Loading...\");\n}","map":{"version":3,"sources":["/Users/kevin/Desktop/Github_Projects/flavortown/src/components/Random/Random.js"],"names":["React","useState","useEffect","Guy","Random","displayData","setDisplayData","fetch","then","res","json","data","console","log","extendedIngredients","image","instructions","title","sourceUrl","renderInstructions","replace","split","slice","map","el","renderIngredients","ingredient","originalString","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,eAAe,SAASC,MAAT,GAAmB;AAC9B;AAD8B,oBAEKH,QAAQ,CAAC,IAAD,CAFb;AAAA;AAAA,QAEvBI,WAFuB;AAAA,QAEXC,cAFW,kBAK9B;;;AACAJ,EAAAA,SAAS,CAAC,MAAI;AACVK,IAAAA,KAAK,CAAC,6CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EACuBF,IADvB,CAC4BG,IAAI,IAAEL,cAAc,CAACK,IAAD,CADhD;AAEC,GAHI,EAIJ,EAJI,CAAT,CAN8B,CAY9B;AAGA;AAGA;;AACA,MAAGN,WAAH,EAAe;AACXO,IAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AADW,UAEJS,mBAFI,GAEuDT,WAFvD,CAEJS,mBAFI;AAAA,UAEiBC,KAFjB,GAEuDV,WAFvD,CAEiBU,KAFjB;AAAA,UAEwBC,YAFxB,GAEuDX,WAFvD,CAEwBW,YAFxB;AAAA,UAEsCC,KAFtC,GAEuDZ,WAFvD,CAEsCY,KAFtC;AAAA,UAE4CC,SAF5C,GAEuDb,WAFvD,CAE4Ca,SAF5C,EAKf;;AACI,UAAMC,kBAAkB,GAAEH,YAAY,CAACI,OAAb,CAAqB,cAArB,EAAoC,EAApC,EAAwCC,KAAxC,CAA8C,GAA9C,EAAmDC,KAAnD,CAAyD,CAAzD,EAA2D,CAAC,CAA5D,EAA+DC,GAA/D,CAAmEC,EAAE,IAC3F;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCA,EAApC,CADsB,CAA1B;AAIA,UAAMC,iBAAiB,GAAEX,mBAAmB,CAACS,GAApB,CAAwBG,UAAU,IACvD;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,UAAU,CAACC,cADhB,CADqB,CAAzB;AAOJ,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAG,MAAA,SAAS,EAAC,gBAAb;AAA8B,MAAA,IAAI,EAAET,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDD,KAAjD,CADH,EAEI;AAAK,MAAA,GAAG,EAAEF,KAAK,GAACA,KAAD,GAAOZ,GAAtB;AAA2B,MAAA,GAAG,EAAC,EAA/B;AAAkC,MAAA,SAAS,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEQ;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKsB,iBADL,CAFR,CAHJ,EASI;AAAS,MAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,kBAAL,CAFJ,CATJ,CADJ;AAkBC;;AACD,SACI;AAAI,IAAA,KAAK,EAAE;AAACS,MAAAA,QAAQ,EAAC;AAAV,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Guy from '../guy.png'\nexport default function Random () {\n    //STATE\n    const [displayData,setDisplayData]=useState(null);\n    \n\n    //EFFECTS \n    useEffect(()=>{\n        fetch('https://flavortown-api.herokuapp.com/random')\n        .then(res=>res.json()).then(data=>setDisplayData(data))\n        }\n        ,[])\n\n    //RENDERING\n\n    \n    //WHEN NOT LOADED \n   \n\n    //LOADED \n    if(displayData){\n        console.log(displayData)\n        const {extendedIngredients, image, instructions, title,sourceUrl}=displayData;\n\n\n    //RESPONSE RENDERING\n        const renderInstructions= instructions.replace('instructions','').split('.').slice(0,-1).map(el=>\n            <li className=\"instructions__item\">{el}</li>\n        )\n\n        const renderIngredients= extendedIngredients.map(ingredient=>\n            <li className='ingredients__item'>\n                {ingredient.originalString}\n            </li>\n        );\n        \n\n    return(\n        <div className=\"random\" >\n           <a className=\"random__recipe\" href={sourceUrl} >{title}</a>\n            <img src={image?image:Guy} alt='' className=\"random__image\"/>\n            <section className=\"ingredients\">\n                <h2 className=\"ingredients__title\">Ingredients</h2>\n                    <ul className=\"ingredients__list\">\n                        {renderIngredients}\n                    </ul>\n            </section>\n            <section className=\"instructions\">\n                <h2 className=\"instructions__title\">Instructions</h2>\n                <ul>{renderInstructions}</ul>\n            </section>\n          \n        </div>\n        )\n    \n    }\n    return(\n        <h1 style={{fontSize:'36px'}}>Loading...</h1>\n    )\n}"]},"metadata":{},"sourceType":"module"}