{"ast":null,"code":"import _slicedToArray from \"/Users/kevin/Desktop/Github_Projects/flavortown/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kevin/Desktop/Github_Projects/flavortown/src/components/GuyNews/GuyNews.js\";\nimport React, { useState, useEffect } from 'react';\nimport Guy from '../guy.png';\nexport default function GuyNews() {\n  //STATE \n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        displayData = _useState2[0],\n        setDisplayData = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        carouselPosition = _useState4[0],\n        setCarouselPosition = _useState4[1]; //GET API \n\n\n  useEffect(() => {\n    fetch('https://flavortown-api.herokuapp.com/carousel').then(res => res.json()).then(data => setDisplayData(data));\n  }, []); //Rendering for Carousel\n  //RENDERING\n  //\n  //if loaded \n\n  if (displayData[0]) {\n    console.log('displayData mounted');\n\n    function Card({\n      title,\n      urlToImage,\n      description,\n      url,\n      author,\n      source\n    }) {\n      return React.createElement(\"div\", {\n        className: \"guyNews__card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"guyNews__cardTitle\",\n        href: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, title), React.createElement(\"summary\", {\n        className: \"guyNews__cardDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, description), React.createElement(\"p\", {\n        className: \"guyNews__cardAuthor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"\".concat(author, \", \").concat(source.name)));\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"guyNews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"guyNews__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"BREAKING Guy Fieri News\"), React.createElement(\"section\", {\n      className: \"guyNews__body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"guyNews__article\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, displayData.map((card, index) => {\n      const title = card.title,\n            urlToImage = card.urlToImage,\n            url = card.url,\n            author = card.author,\n            source = card.source;\n      return React.createElement(Card, {\n        key: index,\n        title: title,\n        urlToImage: urlToImage ? urlToImage : Guy,\n        url: url,\n        author: author,\n        source: source,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    })))));\n  } //defaut return if nothing is loaded \n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"  Loading ... \");\n}","map":{"version":3,"sources":["/Users/kevin/Desktop/Github_Projects/flavortown/src/components/GuyNews/GuyNews.js"],"names":["React","useState","useEffect","Guy","GuyNews","displayData","setDisplayData","carouselPosition","setCarouselPosition","fetch","then","res","json","data","console","log","Card","title","urlToImage","description","url","author","source","name","map","card","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,eAAe,SAASC,OAAT,GAAkB;AAC7B;AAD6B,oBAEMH,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAEtBI,WAFsB;AAAA,QAEVC,cAFU;;AAAA,qBAGgBL,QAAQ,CAAC,CAAD,CAHxB;AAAA;AAAA,QAGtBM,gBAHsB;AAAA,QAGLC,mBAHK,kBAK7B;;;AACAN,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,KAAK,CAAC,+CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,IAAI,IAAEP,cAAc,CAACO,IAAD,CAF1B;AAGH,GAJQ,EAIP,EAJO,CAAT,CAN6B,CAY7B;AAIA;AACA;AAEA;;AACA,MAAGR,WAAW,CAAC,CAAD,CAAd,EAAkB;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AACA,aAASC,IAAT,CAAc;AAACC,MAAAA,KAAD;AAAOC,MAAAA,UAAP;AAAkBC,MAAAA,WAAlB;AAA8BC,MAAAA,GAA9B;AAAkCC,MAAAA,MAAlC;AAAyCC,MAAAA;AAAzC,KAAd,EAA+D;AAC3D,aACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAkC,QAAA,IAAI,EAAEF,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8CH,KAA9C,CADA,EAGQ;AAAS,QAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+CE,WAA/C,CAHR,EAKY;AAAG,QAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAuCE,MAAvC,eAAkDC,MAAM,CAACC,IAAzD,EALZ,CADJ;AAcH;;AAKD,WACI,0CAEA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADA,EAEA;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIlB,WAAW,CAACmB,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAAA,YACvBT,KADuB,GACaQ,IADb,CACvBR,KADuB;AAAA,YACjBC,UADiB,GACaO,IADb,CACjBP,UADiB;AAAA,YACNE,GADM,GACaK,IADb,CACNL,GADM;AAAA,YACFC,MADE,GACaI,IADb,CACFJ,MADE;AAAA,YACKC,MADL,GACaG,IADb,CACKH,MADL;AAE9B,aACI,oBAAC,IAAD;AACI,QAAA,GAAG,EAAEI,KADT;AAEI,QAAA,KAAK,EAAET,KAFX;AAGI,QAAA,UAAU,EAAEC,UAAU,GAACA,UAAD,GAAYf,GAHtC;AAII,QAAA,GAAG,EAAEiB,GAJT;AAKI,QAAA,MAAM,EAAEC,MALZ;AAMI,QAAA,MAAM,EAAEC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUH,KAZG,CADJ,CADA,CAFA,CAFA,CADJ;AA2BH,GArE4B,CAsE7B;;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAIH","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport Guy from '../guy.png'\nexport default function GuyNews(){\n    //STATE \n    const [displayData,setDisplayData]=useState([]);\n    const [carouselPosition,setCarouselPosition]=useState(0);\n\n    //GET API \n    useEffect(()=>{\n        fetch('https://flavortown-api.herokuapp.com/carousel')\n        .then(res=>res.json())\n        .then(data=>setDisplayData(data))\n    },[])\n\n    //Rendering for Carousel\n   \n    \n\n    //RENDERING\n    //\n\n    //if loaded \n    if(displayData[0]){\n        console.log('displayData mounted')\n        function Card({title,urlToImage,description,url,author,source}){\n            return(\n                <div className=\"guyNews__card\">\n                <a className=\"guyNews__cardTitle\" href={url}>{title}</a>\n                       \n                        <summary className=\"guyNews__cardDescription\">{description}</summary>\n                \n                            <p className=\"guyNews__cardAuthor\">{`${author}, ${source.name}`} \n                        </p>\n                        {/* <img \n                            className=\"guyNews__cardImage\"\n                            src={urlToImage} alt='' height={100} width={175}\n                        /> */}\n            </div>\n            )\n        }\n\n\n      \n     \n        return(\n            <>\n            \n            <div className=\"guyNews\">\n            <h2 className=\"guyNews__title\">BREAKING Guy Fieri News</h2>\n            <section className='guyNews__body'>\n            <article className=\"guyNews__article\">\n               {displayData.map((card,index)=>{\n                const {title,urlToImage,url,author,source}=card;\n                return(\n                    <Card\n                        key={index}\n                        title={title}\n                        urlToImage={urlToImage?urlToImage:Guy}\n                        url={url}\n                        author={author}\n                        source={source}\n                    />\n                )\n            })}\n            </article>\n\n            </section>\n            </div>\n           \n            </>\n        )\n    }\n    //defaut return if nothing is loaded \n\n    return(\n        <div>  Loading ... </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}